@import "tailwindcss"; /* Importa as utilidades do Tailwind CSS para o projeto */

html {
  color-scheme: light dark; /* Informa ao navegador que a página suporta tema claro e escuro, ajustando elementos nativos conforme o tema do sistema */
}

/* Oculta o conteúdo do body até que o ThemeProvider defina a classe .dark ou .light, evitando flash de tema errado */
html:not(.dark):not(.light) body {
  visibility: hidden;
}

@theme {
  /* Placeholder para customizações de tema, se necessário */
  --color-dark-red-900-pizzaria: #ff3f4b;
  --color-dark-green-900-pizzaria: #3fffa3;
  --color-dark-gray-900-pizzaria: #101026;
  --color-dark-gray-700-pizzaria: #1d1d2e;
  --color-dark-gray-100-pizzaria: #e5e5e5;

  --color-light-red-300-pizzaria: #d7263d;      /* Vermelho menos vibrante, mais suave para light */
  --color-light-green-300-pizzaria: #1ebc61; 
  --color-light-gray-300-pizzaria: #f4f4f4;     /* Fundo claro */
  --color-light-gray-100-pizzaria: #e5e5e5;     /* Fundo secundário claro */
  --color-light-gray-900-pizzaria: #333333;     /* Cinza escuro para texto */
}

button {
  cursor: pointer;
}

a {
  color: inherit;
  text-decoration: none;
}

body, input, textarea, select, button {
  font-weight: 400;
  font-size: 1rem;
  font-family: sans-serif;
}

@media (max-width: 720px) {
  body, input, textarea, select, button {
    font-size: 87.5%;
  }
}

@variant dark (&:where(.dark, .dark *)); /* Define variantes para aplicar estilos quando .dark está presente */
@variant light (&:where(.light, .light *)); /* Define variantes para aplicar estilos quando .light está presente */